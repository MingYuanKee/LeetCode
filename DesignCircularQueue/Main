class MyCircularQueue:

    def __init__(self, k: int):
        self.queue1 = deque(maxlen=k)
        self.k=k

    def enQueue(self, value: int) -> bool:
        if len(self.queue1)==self.k:
            return False
        else:
            self.queue1.append(value)
            return True

    def deQueue(self) -> bool:
        if self.queue1:
            self.queue1.popleft()
            return True
        else:
            return False

    def Front(self) -> int:
        if self.queue1:
            return self.queue1[0]
        else:
            return -1

    def Rear(self) -> int:
        if self.queue1:
            return self.queue1[-1]
        else:
            return -1

    def isEmpty(self) -> bool:
        if self.queue1:
            return False
        else:
            return True

    def isFull(self) -> bool:
        if len(self.queue1)==self.k:
            return True
        else:
            return False


# Your MyCircularQueue object will be instantiated and called as such:
obj = MyCircularQueue(3)
param_1 = obj.enQueue(1)
param_2 = obj.deQueue()
param_3 = obj.Front()
param_4 = obj.Rear()
param_5 = obj.isEmpty()
param_6 = obj.isFull()
