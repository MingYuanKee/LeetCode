# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        length=0
        node=head
        while node:
            length+=1
            node=node.next
        print('length: ',length)
        middleNodeIndex=int(length/2)
        print('middleNodeIndex: ',middleNodeIndex)
        if middleNodeIndex==0:
            return head.next
        else:
            node=head
            for index in range(middleNodeIndex+1):
            #    print('node: ',node)
                if index==middleNodeIndex-1:
                    node.next=node.next.next
                    break
                node=node.next
        
        return head

        
